% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_estimates_df.R
\name{get_estimates_df}
\alias{get_estimates_df}
\title{Extract and Unnest Tidy Estimates from Prepared Model Fits}
\usage{
get_estimates_df(prepped_fits_df)
}
\arguments{
\item{prepped_fits_df}{A tibble or data frame created by combining one or more
calls to \code{\link[=prep_fit]{prep_fit()}}. Must include a list-column named \code{tidy} (usually called
\code{tidy_obj} or similar depending on naming).}
}
\value{
A tibble containing all coefficient-level estimates with one row per term,
plus any identifying columns (e.g., a model ID column if multiple fits were
combined via \code{\link[dplyr:bind_rows]{dplyr::bind_rows()}}).
}
\description{
Takes one or more pre-processed model fits (as returned by \code{\link[=prep_fit]{prep_fit()}})
and returns a long, tidy data frame of coefficient-level estimates.

This helper drops the model-level (\code{glance}) and variance-covariance (\code{vcov})
list columns, keeping only the term-level information in a flat format suitable
for plotting, tabulation, or downstream analysis.
}
\examples{
\dontrun{
library(estimatr)
library(dplyr)
library(tidyr)

# Example data
dat <- data.frame(
  Y = rnorm(100),
  Z = factor(sample(c("T0", "T1", "T2"), 100, TRUE)),
  X = rnorm(100)
)

# Two model fits with slightly different term selections
fit_1 <- lm_robust(Y ~ Z + X, data = dat)
prepped_fit_1 <- prep_fit(fit_1, term = c("ZT1", "ZT2"))

fit_2 <- lm_robust(Y ~ Z + X, data = dat)
prepped_fit_2 <- prep_fit(fit_2, term = c("ZT1"))

# Combine into one tibble
prepped_fits_df <- dplyr::bind_rows(prepped_fit_1, prepped_fit_2, .id = "fit")

# Extract coefficient-level data
estimates_df <- get_estimates_df(prepped_fits_df)

estimates_df
}

}
